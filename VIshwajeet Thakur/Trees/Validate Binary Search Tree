# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        
        def check_bst(root:TreeNode,min1,max1):
            if(not root):
                return True
            if((root.val>min1) and root.val<max1):
                return check_bst(root.left,min1,root.val) and check_bst(root.right,root.val,max1)
            return False
        
        def is_bst(root:TreeNode):
            if(not root):
                return True
            if(check_bst(root.left,-2147483648-1,root.val) and check_bst(root.right,root.val,2147483647+1)):
                return True
            return False
            
        return is_bst(root)
        
